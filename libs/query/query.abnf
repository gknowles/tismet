; Copyright Glen Knowles 2017.
; Distributed under the Boost Software License, Version 1.0.
;
; query.abnf - tismet query
;
; rules to parse graphite queries
%root = query
%api.prefix = Query
%api.parser.file.h = queryparseint.h
%api.base.file.h = queryparsebaseint.h


query = path / func { Function }

;----------------------------------------------------------------------------
; Path
;----------------------------------------------------------------------------
path = path-seg *("." path-seg) { Start+, End+ }
path-seg = 1*(seg-literal / seg-blot / seg-char-list / seg-str-list)
    { Start+, End+ }

; *
seg-literal = 1*scl-char { Start+, End+ }
seg-blot = "*" { End }

; [] - allows '-' ranges, but not negation (leading '^')
seg-char-list = "[" [scl-dash] *(scl-single-nd ["-" scl-range-end])
    [scl-single] "]" { End }
scl-single = scl-char { Char+ }
scl-single-nd = scl-char-nd { Char+, As scl-single }
scl-dash = "-" { Char+, As scl-single }
scl-range-end = scl-char-nd { Char+ }

; {,,,}
seg-str-list = "{" [seg-str-wsval] 1*("," seg-str-wsval) "}" { Start, End }
seg-str-wsval = *WSP seg-str-val *WSP
seg-str-val = 1*scl-char { Start+, End+ }

scl-char-nd = ALPHA / DIGIT
    / "!" / DQUOTE / "#" / "$" / "%" / "&" / "'"
    / "+"
    / ":" / ";" / "<" / "=" / ">" / "?"
    / "@" / "\" / "^" / "_"
    / "`" / "~"
scl-char = scl-char-nd / "-"

;----------------------------------------------------------------------------
; Function arguments
;----------------------------------------------------------------------------
arg-query = *WSP query *WSP { Start }
arg-num = *WSP number *WSP { End }
arg-string = *WSP DQUOTE string DQUOTE *WSP

; String
string = *(%x20-21 / %x23-7E) { Start+, End+ }

; Timestamp
timestamp = 1*DIGIT { Char+ }

; Number
number = [minus] int [frac] [exp] ; { Function }
decimal-point = "."
digit1-9 = %x31-39 ; 1-9
e = "e" ; e E
exp = e [exp-minus / exp-plus] exp-num
exp-minus = "-" { End }
exp-plus = "+"
exp-num = 1*DIGIT { Char+ }
frac = decimal-point frac-num
frac-num = 1*DIGIT { Char+ }
int = zero / (digit1-9 *DIGIT) { Char+ }
minus = "-" { End }
zero = "0"

;----------------------------------------------------------------------------
; Functions
;----------------------------------------------------------------------------
func = fn-alias { End }
fn-alias = %s"alias(" arg-query "," arg-string ")" { Start }
func =/ fn-derivative
fn-derivative = %s"derivative(" arg-query ")" { Start }
func =/ fn-keepLastValue
fn-keepLastValue = %s"keepLastValue(" arg-query [ "," arg-num ] ")" { Start }
func =/ fn-maximumAbove
fn-maximumAbove = %s"maximumAbove(" arg-query "," arg-num ")" { Start }
func =/ fn-nonNegativeDerivative
fn-nonNegativeDerivative =
    %s"nonNegativeDerivative(" arg-query [ "," arg-num ] ")" { Start }
func =/ fn-scale
fn-scale = %s"scale(" arg-query "," arg-num ")" { Start }
func =/ fn-sum
fn-sum = (%s"sum" / %s"sumSeries") "(" arg-query *( "," arg-query ) ")" { Start }
func =/ fn-timeShift
fn-timeShift = %s"timeShift(" arg-query "," arg-string ")" { Start }
